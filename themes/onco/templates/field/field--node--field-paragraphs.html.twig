{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - content_attributes: HTML attributes for the content.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 */
#}
{% 
  set field_name_class = field_name|clean_class
%}
{%
  set classes = [
    'paragraphs-wrapper',
    'field',
    'field-' ~ entity_type|clean_class ~ '--' ~ field_name_class,
    'field-name-' ~ field_name_class,
    'field-type-' ~ field_type|clean_class,
    'field-label-' ~ label_display,
    label_display == 'inline' ? 'clearfix',
  ]
%}
{%
  set title_classes = [
    'field-label',
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}
{%
  set paragraphs_classes = [
    'field-items',
    'paragraphs'
  ]
%}
{%
  set paragraph_classes = [
    'field-item',
    'paragraph'
  ]
%}
{% 
  set paragraph_menu_item_classes = [
    'paragraphs-menu-item'
  ] 
%}
<ul class="paragraphs-menu">
    {% for item in items %}
      {% set paragraph_menu_item_id = item.content['#field_collection_item'].uuid.value %}
      <li {{ item.attributes.addClass(paragraph_menu_item_classes).setAttribute('data-uuid', paragraph_menu_item_id) }}>{{ item.content['#field_collection_item'].field_title.value }}</li>
      
    {% endfor %}
</ul>
<div{{ attributes.addClass(classes) }}>
  {% if not label_hidden %}
    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
  {% endif %}
  <div{{ content_attributes.addClass(paragraphs_classes) }}>
    {% set counter = 0 %}
    {% for item in items %}
      {% set paragraph_menu_item_id = item.content['#field_collection_item'].uuid.value %}
      <div{{ item.attributes.removeClass(paragraph_menu_item_classes).addClass(counter == 0 ? 'on' : 'off').addClass(paragraph_classes).setAttribute('data-uuid', paragraph_menu_item_id) }}>
        {{ item.content }}
        {% if item.content['#field_collection_item'].field_body.value|raw %}
        <a id="paragraph-trigger-{{ paragraph_menu_item_id }}" class="paragraph-trigger" href="#" rel="#overlay" data-uuid="{{ paragraph_menu_item_id }}">(+)</a>
        {% endif %}
      </div>
      {% set counter = counter + 1 %}
    {% endfor %}
  </div>
</div>
























